diff -pru dropbear.orig/dbutil.c dropbear/dbutil.c
--- dropbear.orig/dbutil.c	2012-05-02 11:50:41.190582458 +0400
+++ dropbear/dbutil.c	2012-05-02 11:50:41.226582074 +0400
@@ -545,8 +545,27 @@ void run_shell_command(const char* cmd,
 
 	/* close file descriptors except stdin/stdout/stderr
 	 * Need to be sure FDs are closed here to avoid reading files as root */
+
+#ifdef ANDROID_CHANGES
+    /* keep the fd pointing to the property workspace open */
+    char *pws = getenv("ANDROID_PROPERTY_WORKSPACE");
+    int pws_fd = 0; /* 0 is safe, it will never be compared against below */
+    if (pws) {
+        char *pws2 = strdup(pws);
+        char *comma = strchr(pws2, ',');
+        if (comma) {
+            *comma = '\0';
+            pws_fd = atoi(pws2);
+        }
+        free(pws2);
+    }
+#endif
+
 	for (i = 3; i <= maxfd; i++) {
-		m_close(i);
+#ifdef ANDROID_CHANGES
+        if (i != pws_fd)
+#endif
+            m_close(i);
 	}
 
 	execv(usershell, argv);
diff -pru dropbear.orig/svr-chansession.c dropbear/svr-chansession.c
--- dropbear.orig/svr-chansession.c	2012-05-02 11:50:41.210582246 +0400
+++ dropbear/svr-chansession.c	2012-05-02 11:50:41.227582063 +0400
@@ -888,6 +888,27 @@ static void execchild(void *user_data) {
 	reseedrandom();
 #endif
 
+#ifdef ANDROID_CHANGES
+    /* save some android-specific environment variables */
+    const char *and_env_name[] = { "ANDROID_ASSETS",
+                                   "ANDROID_BOOTLOGO",
+                                   "ANDROID_DATA",
+                                   "ANDROID_PROPERTY_WORKSPACE",
+                                   "ANDROID_ROOT",
+                                   "BOOTCLASSPATH",
+                                   "EXTERNAL_STORAGE",
+                                   "SD_EXT_DIRECTORY"
+                                 };
+    const int and_env_count = sizeof(and_env_name) / sizeof(*and_env_name);
+    char *and_env_value[and_env_count];
+
+    int i;
+    for (i = 0; i < and_env_count; i++) {
+        char *val = getenv(and_env_name[i]);
+        and_env_value[i] = val ? strdup(val) : NULL;
+    }
+#endif
+
 	/* clear environment */
 	/* if we're debugging using valgrind etc, we need to keep the LD_PRELOAD
 	 * etc. This is hazardous, so should only be used for debugging. */
@@ -935,6 +956,14 @@ static void execchild(void *user_data) {
 	if (chansess->term != NULL) {
 		addnewvar("TERM", chansess->term);
 	}
+#ifdef ANDROID_CHANGES
+    for (i = 0; i < and_env_count; i++) {
+        if (and_env_value[i]) {
+            addnewvar(and_env_name[i], and_env_value[i]);
+            free(and_env_value[i]);
+        }
+     }
+#endif
 
 	if (chansess->tty) {
 		addnewvar("SSH_TTY", chansess->tty);
Только в dropbear: svr-chansession.c.orig
