diff --git a/openpty.c b/openpty.c
new file mode 100644
index 0000000..e03655e
--- /dev/null
+++ b/openpty.c
@@ -0,0 +1,45 @@
+#include "includes.h"
+
+int
+openpty (int *amaster, int *aslave, char *name, struct termios *termp,
+         struct winsize *winp)
+{
+  int master, slave;
+  char *name_slave;
+
+  master = open("/dev/ptmx", O_RDWR | O_NONBLOCK);
+  if (master == -1) {
+    TRACE(("Fail to open master"))
+    return -1;
+  }
+
+  if (grantpt(master))
+    goto fail;
+
+  if (unlockpt(master))
+    goto fail;
+
+  name_slave = ptsname(master);
+  TRACE(("openpty: slave name %s", name_slave))
+  slave = open(name_slave, O_RDWR | O_NOCTTY);
+  if (slave == -1)
+    {
+      goto fail;
+    }
+
+  if(termp)
+    tcsetattr(slave, TCSAFLUSH, termp);
+  if (winp)
+    ioctl (slave, TIOCSWINSZ, winp);
+
+  *amaster = master;
+  *aslave = slave;
+  if (name != NULL)
+    strcpy(name, name_slave);
+
+  return 0;
+
+ fail:
+  close (master);
+  return -1;
+}
diff --git a/sshpty.c b/sshpty.c
index 3526ff0..4ec5c25 100644
--- a/sshpty.c
+++ b/sshpty.c
@@ -53,18 +53,24 @@ pty_allocate(int *ptyfd, int *ttyfd, char *namebuf, int namebuflen)
 	char *name;
 	int i;
 
+#if !defined(HAVE_TTYNAME)
+	i = openpty(ptyfd, ttyfd, namebuf, NULL, NULL);
+#else
 	i = openpty(ptyfd, ttyfd, NULL, NULL, NULL);
+#endif
 	if (i < 0) {
 		dropbear_log(LOG_WARNING, 
 				"pty_allocate: openpty: %.100s", strerror(errno));
 		return 0;
 	}
-	name = ttyname(*ttyfd);
+#if defined(HAVE_TTYNAME)
+	name_ptr = ttyname(*ttyfd);
 	if (!name) {
 		dropbear_exit("ttyname fails for openpty device");
 	}
 
 	strlcpy(namebuf, name, namebuflen);	/* possible truncation */
+#endif
 	return 1;
 #else /* HAVE_OPENPTY */
 #ifdef HAVE__GETPTY
